#!/usr/bin/env perl
# Generate readrc.sv for arbitrary matrix size
# Rok Zitko, Apr 2022

my $BS = 64;
my $N = 256;
my $L = 128;
my $XSZ = $N/$BS;
my $YSZ = $L/$BS;

my $xstr = "";
for (my $x = 0; $x < $XSZ; $x++) {
   $xstr .= ($x != 0 ? ", " : "") . "r[$x]";
}

my $ystr = "";
for (my $y = 0; $y < $YSZ; $y++) {
   $ystr .= ($y != 0 ? ", " : "") . "c[$y]";
}

my $text = <<END;
// Read row and column data from a file
// Rok Zitko, March-April 2022

module readrc #(
 parameter BS = $BS,
 parameter N = $N,
 parameter L = $L
)
(
output reg [N-1:0] rrow0, // reversed order row
output reg [L-1:0] col0
);

parameter XSZ = N/BS;
parameter YSZ = L/BS;

// First elements of rows and columns of the Toeplitz matrix.
logic [BS-1:0] rr [0:XSZ-1];
logic [BS-1:0] c [0:YSZ-1];

initial begin
  \$readmemh("c64-hex.dat", c);
  \$readmemh("rr64-hex.dat", rr);
  rrow0 <= { $xstr } >> 1; // shift one immediately, because already in 'col'
  col0 <= { $ystr };
end

endmodule: readrc
END

open (F, ">readrc.sv-out") or die;
print F $text;
close F;
